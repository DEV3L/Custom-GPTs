I'd be talking about Shawn tails today. And in Agile, we're really measured by delivering high quality software, we don't get measured on delivering parts of a document or anything like that. And then show and tell is a key milestone in that process where we're actually going to show the software that we've built. So we want to go through and talk about several things. What was done in the iteration, kind of where we stand on our backlog, where do we stand on our budget? And then where, where do we have issues, roadblocks, that kind of stuff. Completed, stories are going to be demoed ideally, by the developers themselves, because they take pride in what they're doing. And it's, in some ways, a bit of celebration, yeah, who we actually did get something done. So that's really good. And we're actually showing this working software. That's how we're measured. So it's one of those key milestones. Now, the other thing is, when the demo is being done by the developers, they're really on the hook to try and make sure things actually work. So there's some pressure on them to make sure, hey, when we're going to deliver this stuff, it's actually going to be the working stuff. Ideally, it's actually demoed out of a test environment. So it survived a couple of deploys, as well. So those are a couple of major milestones on the delivery of high quality software to production. So out of that, there might be some discussion with the end customers, a lot of that depends on how much collaboration there was so far, in the process, with teams that actually have high collaboration with real end users, then we may not even need the show and tell because those folks were signing off on the stories in the process as it went. So that part of the show and tells not really unnecessary part. Another part that that might lead to is the discussion of changes. So if it's minor stuff, that team will say, yeah, we can go ahead and tweak this tweak that if a customer looks at it says, You know what, that's exactly what we asked for. But you know what, it's not what we need, we would go through and write some new requirements, put in some new stories in the backlog to be prioritized, as we all have some constraints to live in. So they can't keep on changing the same thing over and over again, we'd never deliver. So that's another aspect of work that can come out of show and tell. So we've kind of shown that stuff. We might even talk about what did not get done, which might lead to actually discussion on Roblox, hey, this bad thing happened, this bad thing happened, hey, can you help us go through and fix this problem? So as a team kind of highlight some of that stuff, because we've planned to get some stuff done, but it didn't work out for that kind of timeframe. The other thing we're going to talk about is where do we stand on our backlog? So we have a whole list of things done? Are we halfway through? Are we three quarters of the way through? Are we kind of where we thought we would be similar to budget was just recently on a team that was kind of surprised that the person who was running it took the development right to the end of the money. And we didn't have any money left over to do some things like deployment to other environments, performance testing, stuff like that. And they said, hey, if we'd known about the budget, we'd be okay. We wouldn't have gotten as far as we did without it. Let's see. So budget and backlog and that's about it for the show and tell so we know where we stand and we're ready to move on into the next iteration.
