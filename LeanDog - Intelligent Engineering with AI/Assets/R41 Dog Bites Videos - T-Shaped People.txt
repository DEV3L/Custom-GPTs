All right, I'd like to talk about T shaped people. Another term for this, that's pretty popular is the generalizing specialists, you hear a lot about this in the athletes face. I guess one really important thing to understand about T shaped people is they're probably the fundamental unit of thing that is required to make stable and hold teams. It's, it's what is required for breaking down the silos too often we take our organizational silos make cross functional teams, and we create little mini silos on the teams, because people still just hand off work, and kind of have this whole mini not my job problem. So the T shaped person, or the generalizing specialist really is required to help break that down and get rid of that dysfunction. So what we mean by generalizing specialists are T shaped person that the T kind of describes the hat of the T is broad, that's the generalization, the body of the T is the depth. And that's the specialty. So you can see that we might have a number of different roles on any given team, you might have a coder, you might have a designer, you might have a tester, you might have an operations guy, DBA, whatever. And kind of you can see there's this progression to be a generalizing specialist, you start with probably the simplest thing is respect, I understand enough about these these people's jobs and respect them as individual contributors. And so we can break down some resistance there. Truly, probably the next step or phase of progression, is that there is a more thorough understanding of what that job entails. And then probably after some point, we want to be able to build knowledge in that other area. So we can be effective pairs, teammates and things like that within other people's specialties. Now, I want to be clear that being a T shaped person or a generalizing specialists does not mean we're trying to make teams full of interchangeable cogs, we don't want to be able to just pick out Bob and shove and Sue. And then it's going to be not noticeable, people should definitely still have their specialties or their crafts. If you're a programmer, you should be proud to be a programmer. But you can't just say I'm just a programmer. So I'm not going to learn anything about testing, because that's not my job. You can't just be a tester or business analyst and say, I'm not gonna learn anything about user design or interaction design. So you have to learn a little bit about each other's jobs. And what we can find a good metric, if we're doing this successfully is we kind of get rid of the state based silos that you tend to see user stories go through, when things get handed off from some type of design or analysis, or these micro waterfall stages. And you actually see that the states have work for a cart, transcend who's working on it, you can see that, you know, two or occasionally three people can pick up a single card, a single user story, and actually see that swim through the entire process from, you know, backlog to done just with those with those two or three people working it through the whole time. So really, I think the the key takeaways for being a T shaped version is respect, understanding and knowledge. It is not to become an interchangeable cod. It's to work with your teammates that have different specialties, to be able to be a useful pair, understanding enough about their craft to be able to give suggestions. Oftentimes, those types of things are a little bit more abstract or meta and their context and really work together to try to optimize optimize flow through the team kind of flow Trump's waste, and that's what it means to be a T shaped version.
