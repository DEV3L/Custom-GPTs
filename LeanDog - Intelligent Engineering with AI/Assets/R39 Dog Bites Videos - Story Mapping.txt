I'd like to talk a little bit about story mapping. So at least the term story mapping was kind of coined by Jeff Patton, although he says himself, he wasn't the first person to start doing this. But he certainly popularized the technique. So story mapping is it's sort of a two dimensional product backlog. So it's got a horizontal and a vertical axis. The vertical axis is sort of like your normal backlog where you've got prioritized features, and it helps you do progressive elaboration of your requirements. So towards the top of the thing, we should definitely have our most important user stories that have kind of been broken down to what we think a good story size is. And as you kind of go down, things might be larger features, or epics and maybe a little more nebulous in nature. And, and also, by definition, sort of less important. What story mapping does is we take that kind of vertical stack of work to do, and we spread it out as well. And we spread it out by trying to think about how the user is actually going to use our system. So it's a bit of a design technique or UI X technique. But I think almost anybody can make use of this. And you can actually even use it with with systems type software as well. But kind of, from some beginning state to some end state, or, or any path or flow through the system, what is what actions and activities you're going to are going to happen. So the activities happen over time. And I think part of, at least in my mind, why I think of this as a story map is, as you have the user stories spread out horizontally and break down vertically. As you kind of read the top layer of the user stories, you should almost be able to tell a story about what the user is going to do and what the user is going to experience. So it's, it's kind of nice, you find that story maps can be augmented in certain ways. You can draw different lines. And sometimes the lines can help you identify where you want minimal viable products are minimally marketable feature sets can be paired off, they can help you do release planning with those stratifications. You can inject other design components like personas, and you can have different key personas over different areas of activities. So you can see maybe you've got an administration activity. And that's gonna be done by some type of systems or back end user or you've got, you know, Lucy, the librarian, and she's working on on the basics of getting books or something put into systems so you can have different types of people that focus on different activities across the way. And then of course, you can do your release planning or your minimum viable product identification by releasing what's important. It's a pretty powerful technique. And I think that everybody should at least try it out, especially if it's something on like a Greenfield, user facing application. And that story, man
