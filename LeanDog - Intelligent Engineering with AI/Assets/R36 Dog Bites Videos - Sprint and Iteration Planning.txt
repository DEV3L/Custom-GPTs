I'm going to be talking about iteration planning, sometimes called Sprint Planning. iterations are timebox to a certain length of time, we like to look at one or two weeks though scrum says two to four weeks, myself, I think anything longer than two weeks is too long. But that's my opinion. And what we want to do is start to take on our backlog in chunks, get it delivered, and a way that can be demonstrated to the customer. And this is what we're going to use as a planning session to take a certain amount over the backlog, plan it, and then execute on the plan and then see how we do. So the product owner customer is the person who really owns the responsibility for selecting the stories for the iteration plan, often that's going to come from something like a release plan, that we've done some high level laying out of what we're going to accomplish over time. So that comes out is an input into this process. And the product owner can choose to even change that an hour before the meeting. The implication is that we have all the information that we really need to start for each item they want to play in there. So we get this list of stories, we'll probably take a look at say, are they really ready. But one of the things I've seen a lot is just a lot of variation with how people actually run their iterations and plan for them. Some of the better ones, let's say for early adopters, they would go through this list. And then we would identify maybe a ringleader developer to say, hey, you know what we want to take a look at validating our high level estimates. Let's go through and create a task list. So they'll go through, take a look at that maybe talk with a product owner, if they have any questions, and come up with a list of tasks, and estimated time for each one of those tasks. They like to see them do that in parallel. So they're going through and doing this detailed level of planning at the same time, then we're going to get together, have the product owner, review and introduce the story to everybody sort of based on the same page. Hopefully, there's some sort of acceptance criteria or specifications, that could be great examples for us to build off of. And then we'll have the person who is the ringleader for that story, present the estimate. And some ways when you go through and talk about the estimates that this is in some ways, like a mini design review, where they can go through it and say, here's what we're going to do, we might need to add this database, we might have to do this, we might have to do that. And then the other developers can say, hey, you know, what, what about this, you know, we need to do this kind of thing. Maybe it's we got to hook in some instrumentation for performance or something like that. All Yeah, I missed that. So we go through it. So everybody on the team has an idea of what's supposed to be done. And then we'll hit the end of that story. We know how many hours. So this is an example of where we dropped down a level of detail from release planning and story points to maybe iteration plans and hours. So you know how many hours we're looking at going through finishing up that story. And that's going to include things like testing. So we go through and run through each of the stories until we hit the number of hours the whole team has, and that really says okay, we're not so maybe our release plan. So we're going to do 10 stories. But when we look at them in detail, we're actually only going to get eight done. So that's what we're going to go through and commit with the customer will probably have some developers sign up for particular stories. It didn't have to be the people who created the estimates, but they might have been involved. Sometimes people will pick stories to say, hey, that's part of the technology I want to learn, or hey, that's really tricky. I want to be a part of that. And I'll pair with somebody else to go through and work on that story. And then we're pretty well set to go. So we've got our list of stories. We've got our task list and now we go off and do it
